AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for LangChain Chatbot Lambda'

Parameters:
  LambdaBucket:
    Type: String
    Default: 'cf-templates-iio8e9bj1plf0-us-west-2'
    Description: 'S3 bucket containing the Lambda deployment package'
  
  LambdaZipFile:
    Type: String
    Default: 'langchain_chatbot.zip'
    Description: 'Name of the Lambda deployment package ZIP file'

Resources:
  ChatbotLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:Query'
                Resource: !GetAtt ChatHistoryTable.Arn
        - PolicyName: SSMAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter'
                Resource: 'arn:aws:ssm:us-west-2:874956223356:parameter/HUGGINGFACE_KEY'

  ChatHistoryTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: ChatHistoryV5
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: SessionId
          AttributeType: S
      KeySchema:
        - AttributeName: SessionId
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expireAt
        Enabled: true

  ChatbotLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: LangchainChatbot
      Handler: lambda_function.lambda_handler
      Role: !GetAtt ChatbotLambdaRole.Arn
      Code:
        S3Bucket: !Ref LambdaBucket
        S3Key: !Ref LambdaZipFile
      Runtime: python3.9
      Timeout: 300
      MemorySize: 512
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref ChatHistoryTable

  ChatbotLambdaFunctionUrl:
    Type: 'AWS::Lambda::Url'
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref ChatbotLambdaFunction
      Cors:
        AllowCredentials: false
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
        MaxAge: 300

Outputs:
  LambdaFunctionUrl:
    Description: 'URL for the Lambda function'
    Value: !GetAtt ChatbotLambdaFunctionUrl.FunctionUrl
  
  DynamoDBTableName:
    Description: 'Name of the DynamoDB table'
    Value: !Ref ChatHistoryTable